[
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('shuffle must be either True or False, got %s.' % self.shuffle     ) ",
        "type": "object",
        "properties": {"shuffle": {"type": "boolean"}},
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('max_iter must be > 0, got %s.' % self.max_iter) ",
        "type": "object",
        "properties": {
            "max_iter": {"type": "number", "minimum": 0, "exclusiveMinimum": True}
        },
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('max_fun must be > 0, got %s.' % self.max_fun) ",
        "type": "object",
        "properties": {
            "max_fun": {"type": "number", "minimum": 0, "exclusiveMinimum": True}
        },
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('alpha must be >= 0, got %s.' % self.alpha) ",
        "type": "object",
        "properties": {"alpha": {"type": "number", "minimum": 0.0}},
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('learning_rate_init must be > 0, got %s.' % self.learning_rate     ) ",
        "anyOf": [
            {
                "type": "object",
                "properties": {
                    "learning_rate": {
                        "not": {"enum": ["constant", "invscaling", "adaptive"]}
                    }
                },
            },
            {
                "type": "object",
                "properties": {
                    "learning_rate_init": {
                        "type": "number",
                        "minimum": 0.0,
                        "exclusiveMinimum": True,
                    }
                },
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('momentum must be >= 0 and <= 1, got %s' % self.momentum) ",
        "allOf": [
            {
                "type": "object",
                "properties": {"momentum": {"type": "number", "maximum": 1}},
            },
            {
                "type": "object",
                "properties": {"momentum": {"type": "number", "minimum": 0}},
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('nesterovs_momentum must be either True or False, got %s.' %     self.nesterovs_momentum) ",
        "type": "object",
        "properties": {"nesterovs_momentum": {"type": "boolean"}},
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('early_stopping must be either True or False, got %s.' %     self.early_stopping) ",
        "type": "object",
        "properties": {"early_stopping": {"type": "boolean"}},
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('validation_fraction must be >= 0 and < 1, got %s' % self.     validation_fraction) ",
        "allOf": [
            {
                "type": "object",
                "properties": {"validation_fraction": {"type": "number", "minimum": 0}},
            },
            {
                "type": "object",
                "properties": {
                    "validation_fraction": {
                        "type": "number",
                        "maximum": 1,
                        "exclusiveMaximum": True,
                    }
                },
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('beta_1 must be >= 0 and < 1, got %s' % self.beta_1) ",
        "allOf": [
            {
                "type": "object",
                "properties": {"beta_1": {"type": "number", "minimum": 0}},
            },
            {
                "type": "object",
                "properties": {
                    "beta_1": {"type": "number", "maximum": 1, "exclusiveMaximum": True}
                },
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('beta_2 must be >= 0 and < 1, got %s' % self.beta_2) ",
        "allOf": [
            {
                "type": "object",
                "properties": {"beta_2": {"type": "number", "minimum": 0}},
            },
            {
                "type": "object",
                "properties": {
                    "beta_2": {"type": "number", "maximum": 1, "exclusiveMaximum": True}
                },
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('epsilon must be > 0, got %s.' % self.epsilon) ",
        "type": "object",
        "properties": {
            "epsilon": {"type": "number", "minimum": 0.0, "exclusiveMinimum": True}
        },
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('n_iter_no_change must be > 0, got %s.' % self.     n_iter_no_change) ",
        "type": "object",
        "properties": {
            "n_iter_no_change": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": True,
            }
        },
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError(     \"The activation '%s' is not supported. Supported activations are %s.\" %     (self.activation, list(sorted(ACTIVATIONS)))) ",
        "XXX TODO XXX": "self.activation in ACTIVATIONS",
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('learning rate %s is not supported. ' % self.learning_rate) ",
        "type": "object",
        "properties": {
            "learning_rate": {"enum": ["constant", "invscaling", "adaptive"]}
        },
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_validate_hyperparameters, Exception: raise ValueError('The solver %s is not supported.  Expected one of: %s' % (     self.solver, ', '.join(supported_solvers))) ",
        "XXX TODO XXX": "self.solver in _STOCHASTIC_SOLVERS + ['lbfgs']",
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X.sparse.to_coo(), 'dtype')"},
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype is None"},
                            {
                                "XXX TODO XXX": "not hasattr(X.sparse.to_coo().dtype, 'kind')"
                            },
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype.kind != 'c'"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X, 'dtype')"},
                            {"XXX TODO XXX": "X.dtype is None"},
                            {"XXX TODO XXX": "not hasattr(X.dtype, 'kind')"},
                            {"XXX TODO XXX": "X.dtype.kind != 'c'"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
        "allOf": [
            {
                "anyOf": [
                    {"XXX TODO XXX": "hasattr(self.hidden_layer_sizes, '__iter__')"},
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"not": {"enum": [None]}}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"not": {"enum": [None]}}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
            {
                "anyOf": [
                    {
                        "XXX TODO XXX": "not hasattr(self.hidden_layer_sizes, '__iter__')"
                    },
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"not": {"enum": [None]}}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"not": {"enum": [None]}}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "self._get_tags()['requires_y']"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "allOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"XXX TODO XXX": "sp.issparse(X)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {"XXX TODO XXX": "sp.issparse(X)"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X.sparse.to_coo(), 'dtype')"},
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype is None"},
                            {
                                "XXX TODO XXX": "not hasattr(X.sparse.to_coo().dtype, 'kind')"
                            },
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype.kind != 'c'"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X, 'dtype')"},
                            {"XXX TODO XXX": "X.dtype is None"},
                            {"XXX TODO XXX": "not hasattr(X.dtype, 'kind')"},
                            {"XXX TODO XXX": "X.dtype.kind != 'c'"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
        "allOf": [
            {
                "anyOf": [
                    {"XXX TODO XXX": "hasattr(self.hidden_layer_sizes, '__iter__')"},
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"type": "string"}}
                                        },
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"enum": ["no_validation"]}}
                                        },
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim <= 1"},
                                                    {
                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"type": "string"}}
                                        },
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"enum": ["no_validation"]}}
                                        },
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim <= 1"},
                                                    {
                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
            {
                "anyOf": [
                    {
                        "XXX TODO XXX": "not hasattr(self.hidden_layer_sizes, '__iter__')"
                    },
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"type": "string"}}
                                        },
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"enum": ["no_validation"]}}
                                        },
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim <= 1"},
                                                    {
                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"type": "string"}}
                                        },
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "y": {"not": {"enum": ["no_validation"]}}
                                        },
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim <= 1"},
                                                    {
                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in X.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"XXX TODO XXX": "sp.issparse(X)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {"XXX TODO XXX": "sp.issparse(X)"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {"type": "object", "properties": {"y": {"not": {"type": "string"}}}},
            {
                "type": "object",
                "properties": {"y": {"not": {"enum": ["no_validation"]}}},
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, None).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(np.asarray(X, None, dtype=dtype[0]).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X.sparse.to_coo(), 'dtype')"},
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype is None"},
                            {
                                "XXX TODO XXX": "not hasattr(X.sparse.to_coo().dtype, 'kind')"
                            },
                            {"XXX TODO XXX": "X.sparse.to_coo().dtype.kind != 'c'"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(X, 'dtype')"},
                            {"XXX TODO XXX": "X.dtype is None"},
                            {"XXX TODO XXX": "not hasattr(X.dtype, 'kind')"},
                            {"XXX TODO XXX": "X.dtype.kind != 'c'"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(X.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.result_type(*list(X.dtypes)) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.result_type(*list(X.dtypes)) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for [np.float64, np.float32] in list(X.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(X.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(X, 'sparse')"},
                            {"XXX TODO XXX": "X.ndim <= 1"},
                            {"XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'sparse')"},
                                    {"XXX TODO XXX": "X.ndim > 1"},
                                ]
                            },
                            {"XXX TODO XXX": "sp.issparse(X)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {"XXX TODO XXX": "sp.issparse(X)"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "dtype[0] is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim < 3"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, None)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "X.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "X.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(X, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(X.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) is None"
                                            },
                                            {
                                                "XXX TODO XXX": "getattr(X, 'dtype', None) not in [np.float64, np.float32]"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(X, None, None).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) is not None"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "getattr(X, 'dtype', None) in [np.float64, np.float32]"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(X, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "X.ndim <= 1"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(X, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "X.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).ndim != 2"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(X)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(X, None, dtype=dtype[0]).ndim != 2"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(np.asarray(y.sparse.to_coo(), None, None).fit)"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(np.asarray(y, None, None).fit)"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(np.asarray(y.sparse.to_coo(), None, None).fit)"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(np.asarray(y, None, None).fit)"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(y, 'sparse')"},
                            {"XXX TODO XXX": "y.ndim <= 1"},
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(y.sparse.to_coo(), 'dtype')"},
                            {"XXX TODO XXX": "y.sparse.to_coo().dtype is None"},
                            {
                                "XXX TODO XXX": "not hasattr(y.sparse.to_coo().dtype, 'kind')"
                            },
                            {"XXX TODO XXX": "y.sparse.to_coo().dtype.kind != 'c'"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'sparse')"},
                                    {"XXX TODO XXX": "y.ndim > 1"},
                                ]
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {"XXX TODO XXX": "not hasattr(y, 'dtype')"},
                            {"XXX TODO XXX": "y.dtype is None"},
                            {"XXX TODO XXX": "not hasattr(y.dtype, 'kind')"},
                            {"XXX TODO XXX": "y.dtype.kind != 'c'"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(y.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for None in list(y.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for None in list(y.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'dtypes')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(y.dtypes, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not all((False for None in list(y.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "all((False for None in list(y.dtypes)))"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "y.ndim <= 1"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim > 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None), 'dtype')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype is None"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(np.asarray(y, None, None).dtype, 'kind')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).dtype.kind != 'c'"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
        "allOf": [
            {
                "anyOf": [
                    {"XXX TODO XXX": "hasattr(self.hidden_layer_sizes, '__iter__')"},
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
            {
                "anyOf": [
                    {
                        "XXX TODO XXX": "not hasattr(self.hidden_layer_sizes, '__iter__')"
                    },
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "anyOf": [
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                                                                    },
                                                                    {
                                                                        "allOf": [
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y, 'dtypes')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "hasattr(y.dtypes, '__array__')"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.ndim <= 1"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "y.sparse.to_coo().dtype != np.dtype('object')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "len(set([dt.subtype.name for dt in y.dtypes])) <= 1"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not hasattr(y, 'sparse')"},
                            {"XXX TODO XXX": "y.ndim <= 1"},
                            {"XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'sparse')"},
                                    {"XXX TODO XXX": "y.ndim > 1"},
                                ]
                            },
                            {"XXX TODO XXX": "sp.issparse(y)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).ndim < 3"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {"XXX TODO XXX": "sp.issparse(y)"},
                                            {
                                                "XXX TODO XXX": "np.asarray(y, None, None).ndim < 3"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).ndim < 3"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {"XXX TODO XXX": "sp.issparse(y)"},
                                            {
                                                "XXX TODO XXX": "np.asarray(y, None, None).ndim < 3"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(np.asarray(y, None, None)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(np.asarray(y, None, None)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(getattr(y, 'dtype', None), 'kind')"
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(y, 'dtypes')"},
                                    {"XXX TODO XXX": "hasattr(y.dtypes, '__array__')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(y, 'sparse')"
                                            },
                                            {"XXX TODO XXX": "y.ndim <= 1"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y.sparse.to_coo())"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y.sparse.to_coo(), None, None).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(y, 'sparse')"
                                                    },
                                                    {"XXX TODO XXX": "y.ndim > 1"},
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(y)"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(y, None, None).ndim != 2"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "array.shape[1] >= 1"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {"XXX TODO XXX": "not hasattr(X, 'fit')"},
            {"XXX TODO XXX": "not callable(X.fit)"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {"XXX TODO XXX": "hasattr(X, '__len__')"},
            {"XXX TODO XXX": "hasattr(X, 'shape')"},
            {"XXX TODO XXX": "hasattr(X, '__array__')"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(X), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(X).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(X).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                            {"XXX TODO XXX": "X.shape is None"},
                                            {"XXX TODO XXX": "len(X.shape) != 0"},
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                            {"XXX TODO XXX": "X.shape is None"},
                            {"XXX TODO XXX": "len(X.shape) != 0"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(np.asarray(X), 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.asarray(X).shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "X.shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'shape')"},
                                    {"XXX TODO XXX": "X.shape is not None"},
                                ]
                            },
                        ]
                    },
                    {"XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"},
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_consistent_length, Exception: raise ValueError(     'Found input variables with inconsistent numbers of samples: %r' % [int     (l) for l in lengths]) ",
        "allOf": [
            {
                "anyOf": [
                    {"XXX TODO XXX": "hasattr(self.hidden_layer_sizes, '__iter__')"},
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
            {
                "anyOf": [
                    {
                        "XXX TODO XXX": "not hasattr(self.hidden_layer_sizes, '__iter__')"
                    },
                    {
                        "allOf": [
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "not np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                            {
                                "anyOf": [
                                    {
                                        "XXX TODO XXX": "np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {"y": {"enum": [None]}},
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {"y": {"type": "string"}},
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "y": {"enum": ["no_validation"]}
                                                },
                                            },
                                        ]
                                    },
                                    {
                                        "allOf": [
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {
                                                                "not": {"enum": [None]}
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "y": {"enum": [None]}
                                                        },
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_X_y, Exception: raise ValueError('y cannot be None') ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"enum": [None]}}},
            {
                "allOf": [
                    {"type": "object", "properties": {"y": {"type": "string"}}},
                    {
                        "type": "object",
                        "properties": {"y": {"enum": ["no_validation"]}},
                    },
                ]
            },
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
        ],
    },
    {
        "description": "From /base.py:BaseEstimator:_check_n_features, Exception: raise ValueError(     f'X has {n_features} features, but {self.__class__.__name__} is expecting {self.n_features_in_} features as input.'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'coefs_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"XXX TODO XXX": "not hasattr(self, 'n_features_in_')"},
            {"XXX TODO XXX": "X.shape[1] == self.n_features_in_"},
        ],
    },
    {
        "description": "From /base.py:BaseEstimator:_validate_data, Exception: raise ValueError(     f'This {self.__class__.__name__} estimator requires y to be passed, but the target y is None.'     ) ",
        "anyOf": [
            {"type": "object", "properties": {"y": {"not": {"enum": [None]}}}},
            {"XXX TODO XXX": "not self._get_tags()['requires_y']"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:column_or_1d, Exception: raise ValueError('y should be a 1d array, got an array of shape {} instead.'     .format(shape)) ",
        "anyOf": [{"XXX TODO XXX": "y.ndim != 2"}, {"XXX TODO XXX": "y.shape[1] != 1"}],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError(msg_err.format(type_err, msg_dtype if msg_dtype is not     None else X.dtype)) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"XXX TODO XXX": "is_multilabel(x)"},
            {"XXX TODO XXX": "x.ndim > 2"},
            {
                "allOf": [
                    {"XXX TODO XXX": "x.dtype == object"},
                    {"XXX TODO XXX": "len(x)"},
                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                ]
            },
            {
                "allOf": [
                    {"XXX TODO XXX": "x.ndim == 2"},
                    {"XXX TODO XXX": "y.shape[1] == 0"},
                ]
            },
            {"XXX TODO XXX": "x.dtype.kind != 'f'"},
            {"XXX TODO XXX": "not np.any(x != x.astype(int))"},
            {"XXX TODO XXX": "_get_config()['assume_finite']"},
            {
                "allOf": [
                    {"XXX TODO XXX": "x.dtype.kind in 'fc'"},
                    {"XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, x))"},
                ]
            },
            {"XXX TODO XXX": "x.dtype.kind not in 'fc'"},
            {"XXX TODO XXX": "np.isfinite(x).all()"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError('Input contains NaN') ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"XXX TODO XXX": "is_multilabel(x)"},
            {"XXX TODO XXX": "x.ndim > 2"},
            {
                "allOf": [
                    {"XXX TODO XXX": "x.dtype == object"},
                    {"XXX TODO XXX": "len(x)"},
                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                ]
            },
            {
                "allOf": [
                    {"XXX TODO XXX": "x.ndim == 2"},
                    {"XXX TODO XXX": "y.shape[1] == 0"},
                ]
            },
            {"XXX TODO XXX": "x.dtype.kind != 'f'"},
            {"XXX TODO XXX": "not np.any(x != x.astype(int))"},
            {"XXX TODO XXX": "_get_config()['assume_finite']"},
            {
                "allOf": [
                    {"XXX TODO XXX": "x.dtype.kind in 'fc'"},
                    {"XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, x))"},
                ]
            },
            {"XXX TODO XXX": "x.dtype.kind in 'fc'"},
            {"XXX TODO XXX": "x.dtype != np.dtype('object')"},
            {"XXX TODO XXX": "not _object_dtype_isnan(x).any()"},
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'Expected array-like (array or non-string sequence), got %r' % y) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "isinstance(x, [Sequence, spmatrix])"},
                            {"XXX TODO XXX": "hasattr(x, '__array__')"},
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {"x": {"not": {"type": "string"}}},
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\") ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "XXX TODO XXX": "x.__class__.__name__ not in ['SparseSeries', 'SparseArray']"
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'You appear to be using a legacy multi-label data representation. Sequence of sequences are no longer supported; use a binary array or sparse matrix instead - the MultiLabelBinarizer transformer can convert to this format.'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"XXX TODO XXX": "is_multilabel(x)"},
            {"XXX TODO XXX": "hasattr(y[0], '__array__')"},
            {"XXX TODO XXX": "isinstance(y[0], Sequence)"},
            {"XXX TODO XXX": "isinstance(y[0], str)"},
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:unique_labels, Exception: raise ValueError('No argument has been passed.') ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"type": "object", "properties": {"ys": {"enum": [True]}}},
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:unique_labels, Exception: raise ValueError('Mix type of y not allowed, got types %s' % ys_types) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) == {'binary', 'multiclass'}"
            },
            {"XXX TODO XXX": "len(set((type_of_target(x) for x in ys))) <= 1"},
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:unique_labels, Exception: raise ValueError(     'Multi-label binary indicator input with different numbers of labels') ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) == {'binary', 'multiclass'}"
            },
            {
                "XXX TODO XXX": "set((type_of_target(x) for x in ys)).pop() != 'multilabel-indicator'"
            },
            {
                "XXX TODO XXX": "len(set((check_array(y, accept_sparse=['csr', 'csc', 'coo']).shape[1] for y in ys))) <= 1"
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:unique_labels, Exception: raise ValueError('Unknown label type: %s' % repr(ys)) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) != {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "_FN_UNIQUE_LABELS.get({'multiclass'}.pop(), None)"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) == {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "_FN_UNIQUE_LABELS.get(set((type_of_target(x) for x in ys)).pop(), None)"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:unique_labels, Exception: raise ValueError('Mix of label input types (string and number)') ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) != {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "len(set((isinstance(label, str) for label in set(chain.from_iterable((_FN_UNIQUE_LABELS.get({'multiclass'}.pop(), None)(y) for y in ys)))))) <= 1"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "set((type_of_target(x) for x in ys)) == {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "len(set((isinstance(label, str) for label in set(chain.from_iterable((_FN_UNIQUE_LABELS.get(set((type_of_target(x) for x in ys)).pop(), None)(y) for y in ys)))))) <= 1"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:MLPClassifier:_validate_input, Exception: raise ValueError(     f'warm_start can only be used where `y` has the same classes as in the previous call to fit. Previously got {self.classes_}, `y` has {classes}'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"XXX TODO XXX": "set(unique_labels(y)) == set(self.classes_)"},
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:MLPClassifier:_validate_input, Exception: raise ValueError(     f\"`y` has classes not in `self.classes_`. `self.classes_` has {self.classes_}. 'y' has {classes}.\"     ) ",
        "anyOf": [
            {"XXX TODO XXX": "not hasattr(self, 'classes_')"},
            {"type": "object", "properties": {"warm_start": {"enum": [False]}}},
            {"type": "object", "properties": {"warm_start": {"enum": [True]}}},
            {
                "XXX TODO XXX": "not len(np.setdiff1d(unique_labels(y), self.classes_, True))"
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ",
        "anyOf": [
            {"type": "object", "properties": {"random_state": {"enum": [None]}}},
            {"XXX TODO XXX": "self.random_state is np.random"},
            {"XXX TODO XXX": "isinstance(self.random_state, np.random.RandomState)"},
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)"
            },
            {
                "allOf": [
                    {
                        "XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0].start is None"
                    },
                    {
                        "XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0].stop is None"
                    },
                ]
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].start) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].stop) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].start) == _determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].stop)"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])"
            },
            {
                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}"
            },
            {
                "XXX TODO XXX": "len({_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}) == 1"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)"
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)"
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}"
                            },
                            {
                                "XXX TODO XXX": "hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError(\"String indexing is not supported with 'axis=0'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[0] is None"},
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0]) != 'str'"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)"
            },
            {
                "allOf": [
                    {
                        "XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1].start is None"
                    },
                    {
                        "XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1].stop is None"
                    },
                ]
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].start) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].stop) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].start) == _determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].stop)"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])"
            },
            {
                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}"
            },
            {
                "XXX TODO XXX": "len({_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}) == 1"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)"
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {
                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)"
            },
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}"
                            },
                            {
                                "XXX TODO XXX": "hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError(\"String indexing is not supported with 'axis=0'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "next(cv.split(X=arrays[0], y=stratify))[1] is None"},
            {
                "XXX TODO XXX": "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1]) != 'str'"
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "not hasattr(X, 'fit')"},
            {"XXX TODO XXX": "not callable(X.fit)"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "hasattr(X, '__len__')"},
            {"XXX TODO XXX": "hasattr(X, 'shape')"},
            {"XXX TODO XXX": "hasattr(X, '__array__')"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(X), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(X).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(X).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                            {"XXX TODO XXX": "X.shape is None"},
                                            {"XXX TODO XXX": "len(X.shape) != 0"},
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                            {"XXX TODO XXX": "X.shape is None"},
                            {"XXX TODO XXX": "len(X.shape) != 0"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(np.asarray(X), 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.asarray(X).shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "X.shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'shape')"},
                                    {"XXX TODO XXX": "X.shape is not None"},
                                ]
                            },
                        ]
                    },
                    {"XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"},
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "not hasattr(arrays[0], 'fit')"},
            {"XXX TODO XXX": "not callable(arrays[0].fit)"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "hasattr(arrays[0], '__len__')"},
            {"XXX TODO XXX": "hasattr(arrays[0], 'shape')"},
            {"XXX TODO XXX": "hasattr(arrays[0], '__array__')"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(arrays[0], '__len__')"},
                            {"XXX TODO XXX": "hasattr(arrays[0], 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(arrays[0], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(arrays[0]), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(arrays[0]).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(arrays[0]).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(arrays[0], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(arrays[0], 'shape')"
                                            },
                                            {"XXX TODO XXX": "arrays[0].shape is None"},
                                            {
                                                "XXX TODO XXX": "len(arrays[0].shape) != 0"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "not hasattr(arrays[0], '__len__')"
                                    },
                                    {"XXX TODO XXX": "not hasattr(arrays[0], 'shape')"},
                                ]
                            },
                            {"XXX TODO XXX": "not hasattr(arrays[0], 'shape')"},
                            {"XXX TODO XXX": "arrays[0].shape is None"},
                            {"XXX TODO XXX": "len(arrays[0].shape) != 0"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(arrays[0], '__len__')"},
                            {"XXX TODO XXX": "hasattr(arrays[0], 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(arrays[0], '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(np.asarray(arrays[0]), 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.asarray(arrays[0]).shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(arrays[0], '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(arrays[0], 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "arrays[0].shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "not hasattr(arrays[0], '__len__')"
                                    },
                                    {"XXX TODO XXX": "not hasattr(arrays[0], 'shape')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(arrays[0], 'shape')"},
                                    {"XXX TODO XXX": "arrays[0].shape is not None"},
                                ]
                            },
                        ]
                    },
                    {"XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"},
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'test_size={0} should be either positive and smaller than the number of samples {1} or a float in the (0, 1) range'     .format(test_size, n_samples)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "validation_fraction": {"not": {"enum": [None]}}
                                },
                            },
                            {"XXX TODO XXX": "0.25.dtype.kind != 'i'"},
                            {"XXX TODO XXX": "0.25 < _num_samples(arrays[0])"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"validation_fraction": {"enum": [None]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind != 'i'"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self.validation_fraction < _num_samples(arrays[0])"
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "validation_fraction": {
                                                                "type": "number",
                                                                "minimum": 0,
                                                                "exclusiveMinimum": True,
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind != 'f'"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "validation_fraction": {
                                                                "type": "number",
                                                                "minimum": 0,
                                                                "exclusiveMinimum": True,
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "validation_fraction": {
                                                                "type": "number",
                                                                "maximum": 1,
                                                                "exclusiveMaximum": True,
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'train_size={0} should be either positive and smaller than the number of samples {1} or a float in the (0, 1) range'     .format(train_size, n_samples)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "None.dtype.kind != 'i'"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None < _num_samples(arrays[0])"},
                                    {"XXX TODO XXX": "None > 0"},
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "None.dtype.kind != 'f'"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None > 0"},
                                    {"XXX TODO XXX": "None < 1"},
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError('Invalid value for test_size: {}'.format(test_size)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "validation_fraction": {"not": {"enum": [None]}}
                                },
                            },
                            {"XXX TODO XXX": "0.25.dtype.kind in ['i', 'f']"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"validation_fraction": {"enum": [None]}},
                            },
                            {
                                "type": "object",
                                "properties": {"validation_fraction": {"enum": [None]}},
                            },
                            {
                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind in ['i', 'f']"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'The sum of test_size and train_size = {}, should be in the (0, 1) range. Reduce test_size and/or train_size.'     .format(train_size + test_size)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "validation_fraction": {"not": {"enum": [None]}}
                                },
                            },
                            {"XXX TODO XXX": "None.dtype.kind != 'f'"},
                            {"XXX TODO XXX": "0.25.dtype.kind != 'f'"},
                            {"XXX TODO XXX": "None + 0.25 <= 1"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"validation_fraction": {"enum": [None]}},
                            },
                            {"XXX TODO XXX": "None.dtype.kind != 'f'"},
                            {
                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind != 'f'"
                            },
                            {"XXX TODO XXX": "None + self.validation_fraction <= 1"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'The sum of train_size and test_size = %d, should be smaller than the number of samples %d. Reduce test_size and/or train_size.'      % (n_train + n_test, n_samples)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "validation_fraction": {"not": {"enum": [None]}}
                                },
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "0.25.dtype.kind != 'f'"},
                                            {
                                                "XXX TODO XXX": "_num_samples(arrays[0]) - ceil(0.25 * _num_samples(arrays[0])) + ceil(0.25 * _num_samples(arrays[0])) <= _num_samples(arrays[0])"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "0.25.dtype.kind == 'f'"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "0.25.dtype.kind != 'i'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(arrays[0]) - 0.25 + 0.25 <= _num_samples(arrays[0])"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "0.25.dtype.kind == 'i'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(arrays[0]) - n_test + n_test <= _num_samples(arrays[0])"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"validation_fraction": {"enum": [None]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind != 'f'"
                                            },
                                            {
                                                "XXX TODO XXX": "_num_samples(arrays[0]) - ceil(self.validation_fraction * _num_samples(arrays[0])) + ceil(self.validation_fraction * _num_samples(arrays[0])) <= _num_samples(arrays[0])"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind == 'f'"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind != 'i'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(arrays[0]) - float(self.validation_fraction) + float(self.validation_fraction) <= _num_samples(arrays[0])"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "np.asarray(self.validation_fraction).dtype.kind == 'i'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(arrays[0]) - n_test + n_test <= _num_samples(arrays[0])"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'With n_samples={}, test_size={} and train_size={}, the resulting train set will be empty. Adjust any of the aforementioned parameters.'     .format(n_samples, test_size, train_size)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "[int(n_train), int(n_test)][0] != 0"},
        ],
    },
    {
        "description": "From /model_selection/_split.py:None:train_test_split, Exception: raise ValueError('At least one array required as input') ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) != 0"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "check_random_state(self.random_state) is None"},
            {"XXX TODO XXX": "check_random_state(self.random_state) is np.random"},
            {
                "XXX TODO XXX": "isinstance(check_random_state(self.random_state), np.random.RandomState)"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {
                "XXX TODO XXX": "isinstance(indices[:max_n_samples], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {
                "XXX TODO XXX": "isinstance(indices[:max_n_samples], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {"XXX TODO XXX": "isinstance(indices[:max_n_samples], slice)"},
            {
                "allOf": [
                    {"XXX TODO XXX": "indices[:max_n_samples].start is None"},
                    {"XXX TODO XXX": "indices[:max_n_samples].stop is None"},
                ]
            },
            {
                "XXX TODO XXX": "_determine_key_type(indices[:max_n_samples].start) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(indices[:max_n_samples].stop) is None"
            },
            {
                "XXX TODO XXX": "_determine_key_type(indices[:max_n_samples].start) == _determine_key_type(indices[:max_n_samples].stop)"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {
                "XXX TODO XXX": "isinstance(indices[:max_n_samples], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {"XXX TODO XXX": "isinstance(indices[:max_n_samples], slice)"},
            {"XXX TODO XXX": "isinstance(indices[:max_n_samples], [list, tuple])"},
            {
                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(indices[:max_n_samples])}"
            },
            {
                "XXX TODO XXX": "len({_determine_key_type(elt) for elt in set(indices[:max_n_samples])}) == 1"
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {
                "XXX TODO XXX": "isinstance(indices[:max_n_samples], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {"XXX TODO XXX": "isinstance(indices[:max_n_samples], slice)"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(indices[:max_n_samples], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(indices[:max_n_samples])}"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(indices[:max_n_samples], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(indices[:max_n_samples], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(indices[:max_n_samples], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {
                "XXX TODO XXX": "isinstance(indices[:max_n_samples], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
            },
            {"XXX TODO XXX": "isinstance(indices[:max_n_samples], slice)"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(indices[:max_n_samples], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(indices[:max_n_samples])}"
                            },
                            {
                                "XXX TODO XXX": "hasattr(indices[:max_n_samples], 'dtype')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "isinstance(indices[:max_n_samples], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "hasattr(indices[:max_n_samples], 'dtype')"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError(\"String indexing is not supported with 'axis=0'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "indices[:max_n_samples] is None"},
            {"XXX TODO XXX": "_determine_key_type(indices[:max_n_samples]) != 'str'"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "not hasattr(X, 'fit')"},
            {"XXX TODO XXX": "not callable(X.fit)"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {"XXX TODO XXX": "hasattr(X, '__len__')"},
            {"XXX TODO XXX": "hasattr(X, 'shape')"},
            {"XXX TODO XXX": "hasattr(X, '__array__')"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(X), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(X).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(X).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                            {"XXX TODO XXX": "X.shape is None"},
                                            {"XXX TODO XXX": "len(X.shape) != 0"},
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                            {"XXX TODO XXX": "X.shape is None"},
                            {"XXX TODO XXX": "len(X.shape) != 0"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"shuffle": {"enum": [False]}}},
            {"XXX TODO XXX": "len(arrays) == 0"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "hasattr(X, '__len__')"},
                            {"XXX TODO XXX": "hasattr(X, 'shape')"},
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(X, '__array__')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(np.asarray(X), 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.asarray(X).shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "hasattr(X, '__array__')"},
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(X, 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "X.shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "not hasattr(X, '__len__')"},
                                    {"XXX TODO XXX": "not hasattr(X, 'shape')"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "hasattr(X, 'shape')"},
                                    {"XXX TODO XXX": "X.shape is not None"},
                                ]
                            },
                        ]
                    },
                    {"XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"},
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "sample_idx[batch_slice].start is None"
                                    },
                                    {
                                        "XXX TODO XXX": "sample_idx[batch_slice].stop is None"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].start) is None"
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].stop) is None"
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].start) == _determine_key_type(sample_idx[batch_slice].stop)"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "sample_idx[batch_slice].start is None"
                                    },
                                    {
                                        "XXX TODO XXX": "sample_idx[batch_slice].stop is None"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].start) is None"
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].stop) is None"
                            },
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice].start) == _determine_key_type(sample_idx[batch_slice].stop)"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                            },
                            {
                                "XXX TODO XXX": "len({_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}) == 1"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                            },
                            {
                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                            },
                            {
                                "XXX TODO XXX": "len({_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}) == 1"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"
                            },
                            {
                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], slice)"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "not {_determine_key_type(elt) for elt in set(sample_idx[batch_slice])}"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(sample_idx[batch_slice], [list, tuple])"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(sample_idx[batch_slice], 'dtype')"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError(\"String indexing is not supported with 'axis=0'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "batch_size": {"not": {"enum": ["auto"]}}
                                },
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], min(200, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice]) != 'str'"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"batch_size": {"enum": ["auto"]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "XXX TODO XXX": "batch_slice not in gen_batches(X.shape[0], np.clip(self.batch_size, 1, X.shape[0]))"
                            },
                            {
                                "type": "object",
                                "properties": {"shuffle": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sample_idx[batch_slice] is None"},
                            {
                                "XXX TODO XXX": "_determine_key_type(sample_idx[batch_slice]) != 'str'"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'fit')"
            },
            {
                "XXX TODO XXX": "not callable(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].fit)"
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape) != 0"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                    },
                                    {
                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is None"
                            },
                            {
                                "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape) != 0"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), 'shape')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape is not None"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is not None"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:column_or_1d, Exception: raise ValueError('y should be a 1d array, got an array of shape {} instead.'     .format(shape)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} != {'binary', 'multiclass'}"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} != {'binary', 'multiclass'}"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))} != {'binary', 'multiclass'}"
                                    },
                                    {
                                        "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))}.pop() not in ['binary', 'multiclass']"
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:column_or_1d, Exception: raise ValueError('y should be a 1d array, got an array of shape {} instead.'     .format(shape)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} != {'binary', 'multiclass'}"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} != {'binary', 'multiclass'}"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))} != {'binary', 'multiclass'}"
                                    },
                                    {
                                        "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))}.pop() not in ['binary', 'multiclass']"
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError(msg_err.format(type_err, msg_dtype if msg_dtype is not     None else X.dtype)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).ndim > 2"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype == object"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(y.flat[0], str)"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).ndim == 2"
                                                    },
                                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind != 'f'"
                                            },
                                            {
                                                "XXX TODO XXX": "not np.any(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]) != self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).astype(int))"
                                            },
                                            {
                                                "XXX TODO XXX": "_get_config()['assume_finite']"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind in 'fc'"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])))"
                                                    },
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind not in 'fc'"
                                            },
                                            {
                                                "XXX TODO XXX": "np.isfinite(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])).all()"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].ndim > 2"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype == object"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(y.flat[0], str)"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].ndim == 2"
                                                    },
                                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind != 'f'"
                                            },
                                            {
                                                "XXX TODO XXX": "not np.any(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3] != train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].astype(int))"
                                            },
                                            {
                                                "XXX TODO XXX": "_get_config()['assume_finite']"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind in 'fc'"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                                    },
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind not in 'fc'"
                                            },
                                            {
                                                "XXX TODO XXX": "np.isfinite(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).all()"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(None)"},
                            {"XXX TODO XXX": "None.ndim > 2"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.dtype == object"},
                                    {"XXX TODO XXX": "len(None)"},
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.ndim == 2"},
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {"XXX TODO XXX": "None.dtype.kind != 'f'"},
                            {"XXX TODO XXX": "not np.any(None != None.astype(int))"},
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.dtype.kind in 'fc'"},
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, None))"
                                    },
                                ]
                            },
                            {"XXX TODO XXX": "None.dtype.kind not in 'fc'"},
                            {"XXX TODO XXX": "np.isfinite(None).all()"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError('Input contains NaN') ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).ndim > 2"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype == object"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(y.flat[0], str)"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).ndim == 2"
                                                    },
                                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind != 'f'"
                                            },
                                            {
                                                "XXX TODO XXX": "not np.any(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]) != self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).astype(int))"
                                            },
                                            {
                                                "XXX TODO XXX": "_get_config()['assume_finite']"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind in 'fc'"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])))"
                                                    },
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype.kind in 'fc'"
                                            },
                                            {
                                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).dtype != np.dtype('object')"
                                            },
                                            {
                                                "XXX TODO XXX": "not _object_dtype_isnan(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])).any()"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].ndim > 2"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype == object"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(y.flat[0], str)"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].ndim == 2"
                                                    },
                                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind != 'f'"
                                            },
                                            {
                                                "XXX TODO XXX": "not np.any(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3] != train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].astype(int))"
                                            },
                                            {
                                                "XXX TODO XXX": "_get_config()['assume_finite']"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind in 'fc'"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                                    },
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype.kind in 'fc'"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].dtype != np.dtype('object')"
                                            },
                                            {
                                                "XXX TODO XXX": "not _object_dtype_isnan(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).any()"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(None)"},
                            {"XXX TODO XXX": "None.ndim > 2"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.dtype == object"},
                                    {"XXX TODO XXX": "len(None)"},
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.ndim == 2"},
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {"XXX TODO XXX": "None.dtype.kind != 'f'"},
                            {"XXX TODO XXX": "not np.any(None != None.astype(int))"},
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "None.dtype.kind in 'fc'"},
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, None))"
                                    },
                                ]
                            },
                            {"XXX TODO XXX": "None.dtype.kind in 'fc'"},
                            {"XXX TODO XXX": "None.dtype != np.dtype('object')"},
                            {"XXX TODO XXX": "not _object_dtype_isnan(None).any()"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'Expected array-like (array or non-string sequence), got %r' % y) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), [Sequence, spmatrix])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), str)"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3], [Sequence, spmatrix])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3], '__array__')"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "XXX TODO XXX": "isinstance(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3], str)"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "isinstance(None, [Sequence, spmatrix])"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "not is_classifier(self)"},
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]).__class__.__name__ not in ['SparseSeries', 'SparseArray']"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {"XXX TODO XXX": "is_classifier(self)"},
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3].__class__.__name__ not in ['SparseSeries', 'SparseArray']"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'You appear to be using a legacy multi-label data representation. Sequence of sequences are no longer supported; use a binary array or sparse matrix instead - the MultiLabelBinarizer transformer can convert to this format.'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]))"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(y[0], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "isinstance(y[0], Sequence)"
                                            },
                                            {"XXX TODO XXX": "isinstance(y[0], str)"},
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "is_multilabel(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(y[0], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "isinstance(y[0], Sequence)"
                                            },
                                            {"XXX TODO XXX": "isinstance(y[0], str)"},
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(None)"},
                            {"XXX TODO XXX": "hasattr(y[0], '__array__')"},
                            {"XXX TODO XXX": "isinstance(y[0], Sequence)"},
                            {"XXX TODO XXX": "isinstance(y[0], str)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError(msg_err.format(type_err, msg_dtype if msg_dtype is not     None else X.dtype)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "is_multilabel(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))"
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).ndim > 2"
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype == object"
                                    },
                                    {
                                        "XXX TODO XXX": "len(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))"
                                    },
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).ndim == 2"
                                    },
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind != 'f'"
                            },
                            {
                                "XXX TODO XXX": "not np.any(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]) != self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).astype(int))"
                            },
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind in 'fc'"
                                    },
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])))"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind not in 'fc'"
                            },
                            {
                                "XXX TODO XXX": "np.isfinite(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])).all()"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(self.predict(None))"},
                            {"XXX TODO XXX": "self.predict(None).ndim > 2"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(None).dtype == object"
                                    },
                                    {"XXX TODO XXX": "len(self.predict(None))"},
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "self.predict(None).ndim == 2"},
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {"XXX TODO XXX": "self.predict(None).dtype.kind != 'f'"},
                            {
                                "XXX TODO XXX": "not np.any(self.predict(None) != self.predict(None).astype(int))"
                            },
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(None).dtype.kind in 'fc'"
                                    },
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self.predict(None)))"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "self.predict(None).dtype.kind not in 'fc'"
                            },
                            {"XXX TODO XXX": "np.isfinite(self.predict(None)).all()"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError('Input contains NaN') ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "is_multilabel(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))"
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).ndim > 2"
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype == object"
                                    },
                                    {
                                        "XXX TODO XXX": "len(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))"
                                    },
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).ndim == 2"
                                    },
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind != 'f'"
                            },
                            {
                                "XXX TODO XXX": "not np.any(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]) != self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).astype(int))"
                            },
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind in 'fc'"
                                    },
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])))"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype.kind in 'fc'"
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).dtype != np.dtype('object')"
                            },
                            {
                                "XXX TODO XXX": "not _object_dtype_isnan(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])).any()"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(self.predict(None))"},
                            {"XXX TODO XXX": "self.predict(None).ndim > 2"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(None).dtype == object"
                                    },
                                    {"XXX TODO XXX": "len(self.predict(None))"},
                                    {"XXX TODO XXX": "isinstance(y.flat[0], str)"},
                                ]
                            },
                            {
                                "allOf": [
                                    {"XXX TODO XXX": "self.predict(None).ndim == 2"},
                                    {"XXX TODO XXX": "y.shape[1] == 0"},
                                ]
                            },
                            {"XXX TODO XXX": "self.predict(None).dtype.kind != 'f'"},
                            {
                                "XXX TODO XXX": "not np.any(self.predict(None) != self.predict(None).astype(int))"
                            },
                            {"XXX TODO XXX": "_get_config()['assume_finite']"},
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "self.predict(None).dtype.kind in 'fc'"
                                    },
                                    {
                                        "XXX TODO XXX": "np.isfinite(_safe_accumulator_op(np.sum, self.predict(None)))"
                                    },
                                ]
                            },
                            {"XXX TODO XXX": "self.predict(None).dtype.kind in 'fc'"},
                            {
                                "XXX TODO XXX": "self.predict(None).dtype != np.dtype('object')"
                            },
                            {
                                "XXX TODO XXX": "not _object_dtype_isnan(self.predict(None)).any()"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'Expected array-like (array or non-string sequence), got %r' % y) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), [Sequence, spmatrix])"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), '__array__')"
                                            },
                                        ]
                                    },
                                    {
                                        "XXX TODO XXX": "isinstance(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), str)"
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "isinstance(self.predict(None), [Sequence, spmatrix])"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(self.predict(None), '__array__')"
                                            },
                                        ]
                                    },
                                    {
                                        "XXX TODO XXX": "isinstance(self.predict(None), str)"
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\") ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).__class__.__name__ not in ['SparseSeries', 'SparseArray']"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "self.predict(None).__class__.__name__ not in ['SparseSeries', 'SparseArray']"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'You appear to be using a legacy multi-label data representation. Sequence of sequences are no longer supported; use a binary array or sparse matrix instead - the MultiLabelBinarizer transformer can convert to this format.'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "is_multilabel(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))"
                            },
                            {"XXX TODO XXX": "hasattr(y[0], '__array__')"},
                            {"XXX TODO XXX": "isinstance(y[0], Sequence)"},
                            {"XXX TODO XXX": "isinstance(y[0], str)"},
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "is_multilabel(self.predict(None))"},
                            {"XXX TODO XXX": "hasattr(y[0], '__array__')"},
                            {"XXX TODO XXX": "isinstance(y[0], Sequence)"},
                            {"XXX TODO XXX": "isinstance(y[0], str)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'fit')"
            },
            {
                "XXX TODO XXX": "not callable(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].fit)"
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                            },
                            {
                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape) != 0"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is None"
                                            },
                                            {
                                                "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape) != 0"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                    },
                                    {
                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                    },
                                ]
                            },
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is None"
                            },
                            {
                                "XXX TODO XXX": "len(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape) != 0"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                            },
                                            {
                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]), 'shape')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]).shape is not None"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is not None"
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], '__len__')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'shape')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].shape is not None"
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "XXX TODO XXX": "isinstance(x.shape[0], numbers.Integral)"
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /metrics/_classification.py:None:_check_targets, Exception: raise ValueError(     "Classification metrics can\'t handle a mix of {0} and {1} targets".     format(type_true, type_pred)) ',
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "len({type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}) <= 1"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "len({type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}) <= 1"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))} == {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "len({type_of_target(None), type_of_target(self.predict(None))}) <= 1"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /metrics/_classification.py:None:_check_targets, Exception: raise ValueError('{0} is not supported'.format(y_type)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() in ['binary', 'multiclass', 'multilabel-indicator']"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() in ['binary', 'multiclass', 'multilabel-indicator']"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))} == {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))}.pop() in ['binary', 'multiclass', 'multilabel-indicator']"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /metrics/_classification.py:None:_check_targets, Exception: raise TypeError(     f'Labels in y_true and y_pred should be of the same type. Got y_true={np.unique(y_true)} and y_pred={np.unique(y_pred)}. Make sure that the predictions provided by the classifier coincides with the true labels.'     ) from e ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "not is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(self._label_binarizer.inverse_transform(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3])), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() != 'binary'"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {"XXX TODO XXX": "is_classifier(self)"},
                                            {
                                                "XXX TODO XXX": "it not in range(self.max_iter)"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "early_stopping": {"enum": [False]}
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))} == {'binary', 'multiclass'}"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() not in ['binary', 'multiclass']"
                                            },
                                            {
                                                "XXX TODO XXX": "{type_of_target(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[3]), type_of_target(self.predict(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1]))}.pop() != 'binary'"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))} == {'binary', 'multiclass'}"
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))}.pop() not in ['binary', 'multiclass']"
                            },
                            {
                                "XXX TODO XXX": "{type_of_target(None), type_of_target(self.predict(None))}.pop() != 'binary'"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/sparsefuncs.py:None:count_nonzero, Exception: raise TypeError('Expected CSR sparse format, got {0}'.format(X.format)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "XXX TODO XXX": "not _check_targets(y_true, y_pred)[0].startswith('multilabel')"
            },
            {
                "XXX TODO XXX": "(_check_targets(y_true, y_pred)[1] - _check_targets(y_true, y_pred)[2]).format == 'csr'"
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('{} is a class, not an instance.'.format(estimator)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "not isclass(self)"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('%s is not an estimator instance.' % estimator) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "hasattr(self, 'fit')"},
        ],
    },
    {
        "description": "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True), 'fit')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True).fit)"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], None, False, True, True), 'fit')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], None, False, True, True).fit)"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'fit')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).fit)"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'fit')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not callable(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).fit)"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True), 'fit')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True).fit)"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=np.float64).astype(np.float64), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=np.float64).astype(np.float64).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=np.float64), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=np.float64).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "type": "string"
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "enum": ["numeric"]
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(None.astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(None.astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(None.astype(dtype[0], casting='unsafe', False), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(None.astype(dtype[0], casting='unsafe', False).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=dtype[0]).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=dtype[0]).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=dtype[0]), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=dtype[0]).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True), 'fit')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not callable(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True).fit)"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "enum": [
                                                                                                            None
                                                                                                        ]
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(None.astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(None.astype(numeric, casting='unsafe', False).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(None.astype(numeric, casting='unsafe', False), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(None.astype(numeric, casting='unsafe', False).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "not": {
                                                                                                                    "enum": [
                                                                                                                        None
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=numeric).astype(np.float64), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=numeric).astype(np.float64).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=numeric), 'fit')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not callable(np.asarray(None, None, dtype=numeric).fit)"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), 'dtype')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype is None"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype, 'kind')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype.kind != 'c'"
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "allOf": [
                                    {
                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                    },
                                    {
                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                    },
                                ]
                            },
                            {"type": "object", "laleNot": "X/isSparse"},
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype is None"
                            },
                            {
                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype, 'kind')"
                            },
                            {
                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype.kind != 'c'"
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64), 'dtype')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype, 'kind')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind != 'c'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]), 'dtype')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype, 'kind')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric), 'dtype')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype, 'kind')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind != 'c'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {"XXX TODO XXX": "sp.issparse(None)"},
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=np.float64), 'dtype')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype is None"
                                            },
                                            {
                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=np.float64).dtype, 'kind')"
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind != 'c'"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "type": "string"
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "enum": ["numeric"]
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(None.astype(dtype[0], casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(None.astype(dtype[0], casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=dtype[0]), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=dtype[0]).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "enum": [
                                                                                            None
                                                                                        ]
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(None.astype(numeric, casting='unsafe', False), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(None.astype(numeric, casting='unsafe', False).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "not": {
                                                                                                    "enum": [
                                                                                                        None
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=numeric), 'dtype')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(np.asarray(None, None, dtype=numeric).dtype, 'kind')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind != 'c'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                            },
                                            {
                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                            },
                                            {
                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                    },
                                                ]
                                            },
                                            {
                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "sp.issparse(None)"},
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     \"Unable to convert array of bytes/strings into decimal numbers with dtype='numeric'\"     ) from e ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.result_type(*list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "all((isinstance(numeric, np.dtype) for numeric in list(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "enum": [
                                                                                                                                                            None
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "not": {
                                                                                                                                                                    "enum": [
                                                                                                                                                                        None
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {"XXX TODO XXX": "sp.issparse(None)"},
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {
                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "type": "string"
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "enum": ["numeric"]
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "enum": [
                                                                                            None
                                                                                        ]
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "not": {
                                                                                                    "enum": [
                                                                                                        None
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "enum": [
                                                                                                                            None
                                                                                                                        ]
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "not": {
                                                                                                                                    "enum": [
                                                                                                                                        None
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "enum": [
                                                                                                                            None
                                                                                                                        ]
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "not": {
                                                                                                                                    "enum": [
                                                                                                                                        None
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).ndim < 3"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "enum": [
                                                                                                                            None
                                                                                                                        ]
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "not": {
                                                                                                                                    "enum": [
                                                                                                                                        None
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "enum": [
                                                                                                                            None
                                                                                                                        ]
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "not": {
                                                                                                                                    "enum": [
                                                                                                                                        None
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "not": {
                                                                                                                                            "enum": [
                                                                                                                                                "numeric"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "enum": [
                                                                                                                                                    "numeric"
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).ndim < 3"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {"XXX TODO XXX": "sp.issparse(None)"},
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).astype(np.float64).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).ndim < 3"
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "type": "string"
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "enum": ["numeric"]
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "enum": [
                                                                                            None
                                                                                        ]
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "not": {
                                                                                                    "enum": [
                                                                                                        None
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "not": {
                                                                                                            "enum": [
                                                                                                                "numeric"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).astype(np.float64).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "enum": [
                                                                                                                    "numeric"
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).ndim < 3"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0])) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "XXX TODO XXX": "not hasattr(getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"
                                                    },
                                                    {
                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "numeric": {
                                                                        "not": {
                                                                            "enum": [
                                                                                "numeric"
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "laleNot": "X/isSparse",
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True)) >= 1"
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "numeric": {
                                                                                "enum": [
                                                                                    "numeric"
                                                                                ]
                                                                            }
                                                                        },
                                                                    },
                                                                ]
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in numeric"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, None)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], None, False, True, True)) >= 1"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, None)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "getattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in numeric"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=dtype[0])) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "laleNot": "X/isSparse",
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "numeric": {
                                                                                                                                                                        "not": {
                                                                                                                                                                            "enum": [
                                                                                                                                                                                "numeric"
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).astype(np.float64)) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "allOf": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "properties": {
                                                                                                                                                                            "numeric": {
                                                                                                                                                                                "enum": [
                                                                                                                                                                                    "numeric"
                                                                                                                                                                                ]
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                                                                    },
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=dtype[0])) >= 1"
                                                                                                                                                            },
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "not hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), None, dtype=numeric)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "hasattr(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "laleNot": "X/isSparse",
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "XXX TODO XXX": "sp.issparse(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1])"
                                                                                                            },
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "numeric": {
                                                                                                                                        "enum": [
                                                                                                                                            None
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None).astype(numeric, casting='unsafe', False)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "anyOf": [
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "numeric": {
                                                                                                                                                "not": {
                                                                                                                                                    "enum": [
                                                                                                                                                        None
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "allOf": [
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "numeric": {
                                                                                                                                                        "not": {
                                                                                                                                                            "enum": [
                                                                                                                                                                "numeric"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).astype(np.float64)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "allOf": [
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "numeric": {
                                                                                                                                                                "enum": [
                                                                                                                                                                    "numeric"
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "XXX TODO XXX": "np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                                                    },
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(train_test_split(X, y, random_state=self._random_state, test_size=self.validation_fraction, stratify=stratify)[1], None, dtype=numeric)) >= 1"
                                                                                                                                            },
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                ]
                                                                                                                            },
                                                                                                                        ]
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [True]}},
                            },
                            {"XXX TODO XXX": "it not in range(self.max_iter)"},
                            {
                                "type": "object",
                                "properties": {"early_stopping": {"enum": [False]}},
                            },
                            {
                                "allOf": [
                                    {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"type": "string"}
                                                    }
                                                },
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "numeric": {
                                                        "not": {"enum": ["numeric"]}
                                                    }
                                                },
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "laleNot": "X/isSparse",
                                                            },
                                                            {
                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=np.float64, False, True, True)) >= 1"
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "numeric": {
                                                                                        "not": {
                                                                                            "enum": [
                                                                                                "numeric"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind not in 'OUSV'"
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=np.float64).astype(np.float64)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "numeric": {
                                                                                                "enum": [
                                                                                                    "numeric"
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                    },
                                                                                    {
                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=np.float64).dtype.kind in 'OUSV'"
                                                                                    },
                                                                                ]
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=np.float64)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "allOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "type": "string"
                                                            }
                                                        },
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "numeric": {
                                                                "enum": ["numeric"]
                                                            }
                                                        },
                                                    },
                                                ]
                                            },
                                            {
                                                "allOf": [
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "XXX TODO XXX": "dtype[0] is None"
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(dtype[0]).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(None.astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(None.astype(dtype[0], casting='unsafe', False)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "XXX TODO XXX": "dtype[0] is not None"
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(dtype[0]).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=dtype[0]).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=dtype[0]).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=dtype[0])) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                    {
                                                        "anyOf": [
                                                            {
                                                                "XXX TODO XXX": "isinstance(numeric, [list, tuple])"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "object",
                                                                                "laleNot": "X/isSparse",
                                                                            },
                                                                            {
                                                                                "XXX TODO XXX": "_num_samples(_ensure_sparse_format(None, accept_sparse=['csr', 'csc'], dtype=numeric, False, True, True)) >= 1"
                                                                            },
                                                                        ]
                                                                    },
                                                                    {
                                                                        "anyOf": [
                                                                            {
                                                                                "XXX TODO XXX": "sp.issparse(None)"
                                                                            },
                                                                            {
                                                                                "allOf": [
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "numeric": {
                                                                                                        "enum": [
                                                                                                            None
                                                                                                        ]
                                                                                                    }
                                                                                                },
                                                                                            },
                                                                                            {
                                                                                                "XXX TODO XXX": "np.dtype(numeric).kind not in 'iu'"
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(None.astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "None.astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(None.astype(numeric, casting='unsafe', False)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "numeric": {
                                                                                                                "not": {
                                                                                                                    "enum": [
                                                                                                                        None
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                    },
                                                                                                    {
                                                                                                        "XXX TODO XXX": "np.dtype(numeric).kind in 'iu'"
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "numeric": {
                                                                                                                        "not": {
                                                                                                                            "enum": [
                                                                                                                                "numeric"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind not in 'OUSV'"
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=numeric).astype(np.float64)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "numeric": {
                                                                                                                                "enum": [
                                                                                                                                    "numeric"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "XXX TODO XXX": "np.asarray(None, None, dtype=numeric).dtype.kind in 'OUSV'"
                                                                                                                    },
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "XXX TODO XXX": "_num_samples(np.asarray(None, None, dtype=numeric)) >= 1"
                                                                                                            },
                                                                                                        ]
                                                                                                    },
                                                                                                ]
                                                                                            },
                                                                                        ]
                                                                                    },
                                                                                ]
                                                                            },
                                                                        ]
                                                                    },
                                                                ]
                                                            },
                                                        ]
                                                    },
                                                ]
                                            },
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
        ],
    },
    {
        "description": "From /base.py:BaseEstimator:_check_n_features, Exception: raise ValueError(     f'X has {n_features} features, but {self.__class__.__name__} is expecting {self.n_features_in_} features as input.'     ) ",
        "anyOf": [
            {"XXX TODO XXX": "self.solver not in _STOCHASTIC_SOLVERS"},
            {"XXX TODO XXX": "it not in range(self.max_iter)"},
            {"type": "object", "properties": {"early_stopping": {"enum": [False]}}},
            {"XXX TODO XXX": "not hasattr(self, 'n_features_in_')"},
            {"XXX TODO XXX": "X.shape[1] == self.n_features_in_"},
        ],
    },
    {
        "description": "From /neural_network/_multilayer_perceptron.py:BaseMultilayerPerceptron:_fit, Exception: raise ValueError('hidden_layer_sizes must be > 0, got %s.' % hidden_layer_sizes     ) ",
        "allOf": [
            {
                "anyOf": [
                    {"XXX TODO XXX": "hasattr(self.hidden_layer_sizes, '__iter__')"},
                    {
                        "XXX TODO XXX": "not np.any(np.array(list([self.hidden_layer_sizes])) <= 0)"
                    },
                ]
            },
            {
                "anyOf": [
                    {
                        "XXX TODO XXX": "not hasattr(self.hidden_layer_sizes, '__iter__')"
                    },
                    {
                        "XXX TODO XXX": "not np.any(np.array(list(self.hidden_layer_sizes)) <= 0)"
                    },
                ]
            },
        ],
    },
]
